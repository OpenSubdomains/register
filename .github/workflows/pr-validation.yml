name: PR Validation

on:
  pull_request:
    types:
      - opened

jobs:
  validation:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      # Step 3: Install dependencies (Axios for API requests)
      - name: Install dependencies
        run: npm install axios

      # Step 4: Run domain and subdomain validation
      - name: Run subdomain validation
        run: |
          # Read the subdomain data from the file (adjust path if needed)
          subdomain_data=$(cat subdomain_info.json)

          # Extract the subdomain from the JSON data
          subdomain=$(echo "$subdomain_data" | jq -r '.subdomain')

          # Check if the subdomain exists by calling GitHub API
          node -e "
            const axios = require('axios');
            const subdomain = '$subdomain';
            const GITHUB_API_BASE_URL = 'https://api.github.com/repos/is-a-dev/register/contents/domains';
            const fs = require('fs');

            async function checkSubdomainAvailability(subdomain) {
              try {
                const response = await axios.get(\`\${GITHUB_API_BASE_URL}/\${subdomain}.json\`);
                if (response.data) {
                  console.error('Subdomain \\"' + subdomain + '\\" is already taken.');
                  process.exit(1); // Exit with failure if subdomain is taken
                }
              } catch (error) {
                if (error.response && error.response.status === 404) {
                  console.log('Subdomain \\"' + subdomain + '\\" is available.');
                } else {
                  console.error('Error checking subdomain availability:', error.message);
                  process.exit(1);
                }
              }
            }

            // Validate subdomain availability
            checkSubdomainAvailability(subdomain);
          "

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
